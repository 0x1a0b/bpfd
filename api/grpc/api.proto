syntax = "proto3";
option go_package = "grpc";

package grpc;

service API {
  rpc CreateRule(CreateRuleRequest) returns (CreateRuleResponse) {}
  rpc RemoveRule(RemoveRuleRequest) returns (RemoveRuleResponse) {}
  rpc ListRules(ListRulesRequest) returns (ListRulesResponse) {}
  rpc LiveTrace(LiveTraceRequest) returns (stream Event) {}
}

message CreateRuleRequest {
  Rule rule = 2; // the rule to be created
}

message CreateRuleResponse {
}

message RemoveRuleRequest {
  string name = 1; // Name of rule
  string tracer = 2; // Name of tracer
}

message RemoveRuleResponse {
}

message ListRulesRequest {
}

message Rule {
  string name = 1; // Name of rule
  string tracer = 2; // Name of tracer
  map<string, Filter> filterEvents = 3; // Filters for the events
  repeated string containerRuntimes = 4; // Container runtimes to apply the rule to
  repeated string actions = 5; // Actions to perform when this rule matches an event
}

message Filter {
  repeated string values = 1; // Values for the filter
}

message ListRulesResponse {
  repeated Rule rules = 1; // List of rules
}

message Event {
  uint32 PID = 1;
  uint32 TGID = 2;
  map<string, string> data = 3;
  string containerID = 4; // Filled in after the tracer is run so you don't need to.
  string containerRuntime = 5; // Filled in after the tracer is run so you don't need to.
  string tracer = 6; // Filled in after the tracer is run so you don't need to.
}

message LiveTraceRequest {
}
